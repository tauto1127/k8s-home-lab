apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
    name: secret-store-provider
    namespace: gcpsm-secret
spec:
    # Used to select the correct ESO controller (think: ingress.ingressClassName)
    # The ESO controller is instantiated with a specific controller name
    # and filters ES based on this property
    # Optional
    # controller: dev

    # provider field contains the configuration to access the provider
    # which contains the secret exactly one provider must be configured.
    provider:
        # (2): GCP Secret Manager
        gcpsm:
            # Auth defines the information necessary to authenticate against GCP by getting
            # the credentials from an already created Kubernetes Secret.
            auth:
                secretRef:
                    secretAccessKeySecretRef:
                        name: gcpsm-secret
                        key: secret-access-credentials
                        namespace: gcpsm-secret
            projectID: "269357193809"

    # # Conditions about namespaces in which the ClusterSecretStore is usable for ExternalSecrets
    # conditions:
    #   # Options are namespaceSelector, namespaces or namespacesRegex
    #   - namespaceSelector:
    #       matchLabels:
    #         my.namespace.io/some-label: "value" # Only namespaces with that label will work

    #   - namespaces:
    #       - "namespace-a"
    #       - "namespace-b"

    #   # Namespace regexes are useful for policy management or when external tools auto-generate namespaces with prefixes/suffixes
    #   - namespaceRegexes:
    #       - "namespace-a-.*" # All namespaces prefixed by namespace-a- will work
    #       - "namespace-b-.*" # All namespaces prefixed by namespace-b- will work

    #   # conditions needs only one of the conditions to meet for the CSS to be usable in the namespace.
# status:
#   # Standard condition schema
#   conditions:
#     # SecretStore ready condition indicates the given store is in ready
#     # state and able to referenced by ExternalSecrets
#     # If the `status` of this condition is `False`, ExternalSecret controllers
#     # should prevent attempts to fetch secrets
#     - type: Ready
#       status: "False"
#       reason: "ConfigError"
#       message: "SecretStore validation failed"
#       lastTransitionTime: "2019-08-12T12:33:02Z"
